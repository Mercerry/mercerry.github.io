{"meta":{"title":"Mercerry's Blog","subtitle":null,"description":"月がきれい","author":"Mercerry","url":""},"pages":[{"title":"about","date":"2018-12-12T22:14:36.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T21:32:48.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T23:13:35.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T23:13:48.000Z","updated":"2023-02-17T02:09:19.225Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T23:13:05.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T21:47:59.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T23:11:06.000Z","updated":"2023-02-17T02:09:19.225Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T23:14:28.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"rss","date":"2018-12-20T23:09:03.000Z","updated":"2023-02-17T02:09:19.225Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T22:14:16.000Z","updated":"2023-02-17T02:09:19.225Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T22:53:25.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T23:14:38.000Z","updated":"2023-02-17T02:09:19.225Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"CentOS7下使用Mondo Rescue实现系统全备份","slug":"CentOS7下使用Mondo-Rescue实现系统全备份","date":"2023-02-15T09:38:01.000Z","updated":"2023-02-15T09:38:01.000Z","comments":true,"path":"post/2023/02/15/CentOS7下使用Mondo-Rescue实现系统全备份/","link":"","permalink":"/post/2023/02/15/CentOS7下使用Mondo-Rescue实现系统全备份/","excerpt":"","text":"CentOS7下使用Mondo Rescue实现系统全备份安装Mondo Rescuemondorescue.repo 源配置cd /etc/yum.repos.d/ wget ftp://ftp.mondorescue.org/centos/7/x86_64/mondorescue.repo sed -i \"s/gpgcheck=1/gpgcheck=0/g\" mondorescue.repo cat mondorescue.repo 安装mondoyum install mondo 修改分区挂载文件/etc/fstab分区挂载格式要用盘符去挂载不要用UUID去挂载，不然做好镜像在还原的时候会识别不了修改分区挂载文件：/etc/fstab改成对应的盘符 首先看看硬盘的信息blkid cat /etc/fstab 修改/etc/fstab 把uuid改为盘符 reboot可以正常重启 创建备份文件夹 mkdir /home/backup 然后执行 mondoarchive 选择备份位置选择备份目录选择压缩格式选择压缩率备份最大大小 这里可以填大一点 这样会只保存成一个文件 方便恢复 填很大也只会占用实际备份完系统大小的空间备份文件名prefix备份目录为/选择不备份的目录 这边可以把备份目录排除/home/backup临时文件目录 不用更改scratch目录 不用更改是否备份额外参数 yes备份内核 不用更改是否验证备份 yes开始备份","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"}]},{"title":"Ubuntu20.04安装OpenFOAM-v2206","slug":"Ubuntu20-04安装OpenFOAM-v2206","date":"2023-02-09T15:02:23.000Z","updated":"2023-02-09T15:02:23.000Z","comments":true,"path":"post/2023/02/09/Ubuntu20-04安装OpenFOAM-v2206/","link":"","permalink":"/post/2023/02/09/Ubuntu20-04安装OpenFOAM-v2206/","excerpt":"","text":"Ubuntu20.04安装OpenFOAM-v2206方法通过软件源安装用时较短 网络好的情况下推荐通过软件源安装已经编译好的OpenFOAM 通过软件源安装这种方式要保证自己的网络畅通 sourceforge.net sf.net 如果访问不了或者连接不稳定 推荐编译安装 添加repo curl -s https://dl.openfoam.com/add-debian-repo.sh | sudo bash apt安装openfoam2206-default default中已经包含ThridParty内容 sudo apt install openfoam2206-default 如果安装好后缺少什么内容 根据提示安装相应的软件包即可 安装成功后测试是否安装成功 openfoam2206 有输出即为安装成功 将openfoam的命令添加到bash中 nano ~/.bashrc 在文件末尾加上 source /usr/lib/openfoam/openfoam2112/etc/bashrc ctrl+o然后回车保存 然后再按ctrl+x退出然后source一下bashrc source ~/.bashrc 安装完成 通过源码编译安装这种方式适合网络不好的时候使用 编译时间较长 下载OpenFOAM-v2206安装包与third-party-v2206版本安装包这步可以下载后通过sftp等工具上传 这里推荐使用WinSCP不自己下载可以按照命令往下走https://dl.openfoam.com/source/v2206/OpenFOAM-v2206.tgzhttps://dl.openfoam.com/source/v2206/ThirdParty-v2206.tgz 在主目录下新建OpenFOAM文件夹并在其中解压缩安装包cd ~ && mkdir OpenFOAM 下载两个安装包 wget https://dl.openfoam.com/source/v2206/OpenFOAM-v2206.tgz wget https://dl.openfoam.com/source/v2206/ThirdParty-v2206.tgz （如果已经下好了可以通过WinSCP放到当前用户主目录下 例：/home/ubuntu/） 解压两个安装包 tar -xvf OpenFOAM-v2206.tgz tar -xvf ThirdParty-v2206.tgz 安装依赖终端键入以下命令（过程中可能需要输入密码）： sudo apt-get update sudo apt-get install build-essential autoconf autotools-dev cmake gawk gnuplot sudo apt-get install flex libfl-dev libreadline-dev zlib1g-dev openmpi-bin libopenmpi-dev mpi-default-bin mpi-default-dev sudo apt-get install libgmp-dev libmpfr-dev libmpc-dev sudo apt-get install libfftw3-dev libscotch-dev libptscotch-dev libboost-system-dev libboost-thread-dev libcgal-dev 设置环境变量，键入以下命令： nano ~/.bashrc 在文件末尾加上 source ~/OpenFOAM/OpenFOAM-v2206/etc/bashrc ctrl+o然后回车保存 然后再按ctrl+x退出 然后source一下 source ~/.bashrc 安装OpenFOAMcd ~/OpenFOAM/OpenFOAM-v2206 ./Allwmake -j -s -q -l 安装第三方third-partycd ~/OpenFOAM/ThirdParty-v2206 sudo apt install paraview-dev sudo apt install cmake qtbase5-dev qttools5-dev qttools5-dev-tools libqt5opengl5-dev libqt5x11extras5-dev libxt-dev ./Allwmake -j -s -q -l 额外：安装waves2foam安装依赖sudo apt install libgsl-dev gfortran subversion git 通过svn下载源代码 mkdir -p $FOAM_RUN/../applications/utilities cd $FOAM_RUN/../applications/utilities svn co http://svn.code.sf.net/p/openfoam-extend/svn/trunk/Breeder_1.6/other/waves2Foam 由于（大陆）网络波动，下载时有一定的可能性会出现下载失败或者校验失败等等这个时候需要先解除svn对文件夹的锁定，然后再次执行svn下载 svn clean up waves2Foam svn co http://svn.code.sf.net/p/openfoam-extend/svn/trunk/Breeder_1.6/other/waves2Foam 编译 cd waves2Foam ./Allwmake","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"},{"name":"openFOAM","slug":"linux/技术/openFOAM","permalink":"/categories/linux/技术/openFOAM/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"openFOAM","slug":"openFOAM","permalink":"/tags/openFOAM/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"},{"name":"openFOAM","slug":"linux/技术/openFOAM","permalink":"/categories/linux/技术/openFOAM/"}]},{"title":"Nexus服务器软件安装和配置","slug":"Nexus服务器软件安装和配置","date":"2023-02-09T14:51:29.000Z","updated":"2023-02-09T14:51:29.000Z","comments":true,"path":"post/2023/02/09/Nexus服务器软件安装和配置/","link":"","permalink":"/post/2023/02/09/Nexus服务器软件安装和配置/","excerpt":"","text":"Nexus服务器软件安装和配置目前比较流行的使用nexus搭建maven私有服务器，其实很简单，它就是一个web系统，从官方下载的包默认内嵌了jetty容器，所以需要提前安装好JVM，并配置好环境变量，接下来只需要简单配置并运行即可。 官方下载Nexus oos版本：https://www.sonatype.com/download-oss-sonatype 安装下载后解压，有2个目录：nexus-3.4.0-02 sonatype-worknexus-3.4.0-02 -&gt; bin目录有3个文件nexus(执行程序)、nexus.rc(配置文件，配置运行nexus的用户)、nexus.vmproperties（配置文件，配置nexus运行JVM虚拟机参数）只需要设置nexus.rc中为：run_as_user=\"username\", 注意nexus基于安全考虑username不能是root。 启动停止bin目录下执行: nexus start启动，nexus status查看运行状态， nexus run运行并打印结果会占用终端，nexus stop停止。 linux下安装命令参考:cd ~/donwload # 解压到指定目录 sudo mkdir /usr/local/nexus suod tar xzvf nexus-3.4.0-02-unix.tar.gz -C /usr/local/nexus # 修改nexus目录的权限 cd /usr/local/nexus sudo chown -R lkqm . # 修改配置文件nexus.rc # 运行 cd nexus-3.4.0-02/bin ./nexus start 进入WEB管理端，配置仓库浏览器中访问192.168.0.1:8081, 未登录状态，只能查看服务器端哪些仓库，以及有那些包(jar), 左侧树形菜单browse点击可以查看。管理员账号默认admin，密码位于/usr/local/nexus/sonatype-work/nexus3/admin.password","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"maven","slug":"linux/maven","permalink":"/categories/linux/maven/"},{"name":"java","slug":"linux/maven/java","permalink":"/categories/linux/maven/java/"},{"name":"技术","slug":"linux/maven/java/技术","permalink":"/categories/linux/maven/java/技术/"}],"tags":[{"name":"maven","slug":"maven","permalink":"/tags/maven/"},{"name":"nexus","slug":"nexus","permalink":"/tags/nexus/"},{"name":"java","slug":"java","permalink":"/tags/java/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"maven","slug":"linux/maven","permalink":"/categories/linux/maven/"},{"name":"java","slug":"linux/maven/java","permalink":"/categories/linux/maven/java/"},{"name":"技术","slug":"linux/maven/java/技术","permalink":"/categories/linux/maven/java/技术/"}]},{"title":"PVE修改用户密码报错解决方法","slug":"PVE修改用户密码报错解决方法","date":"2023-02-08T16:08:53.000Z","updated":"2023-02-08T16:08:53.000Z","comments":true,"path":"post/2023/02/08/PVE修改用户密码报错解决方法/","link":"","permalink":"/post/2023/02/08/PVE修改用户密码报错解决方法/","excerpt":"","text":"PVE修改用户密码报错解决方法在webui创建好用户后，在shell通过useradd添加用户","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"PVE","slug":"linux/PVE","permalink":"/categories/linux/PVE/"},{"name":"技术","slug":"linux/PVE/技术","permalink":"/categories/linux/PVE/技术/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"PVE","slug":"PVE","permalink":"/tags/PVE/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"PVE","slug":"linux/PVE","permalink":"/categories/linux/PVE/"},{"name":"技术","slug":"linux/PVE/技术","permalink":"/categories/linux/PVE/技术/"}]},{"title":"PVE添加xterm.js支持","slug":"PVE添加xterm-js支持","date":"2023-02-08T15:48:38.000Z","updated":"2023-02-08T15:48:38.000Z","comments":true,"path":"post/2023/02/08/PVE添加xterm-js支持/","link":"","permalink":"/post/2023/02/08/PVE添加xterm-js支持/","excerpt":"","text":"PVE添加xterm.js终端支持 关闭vm，在硬件中新增一个串口0 重启vm 用dmesg验证是否有ttyS出现dmesg | grep ttyS 如果出现如下代表有了[ 3.521757] 00:04: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A 然后编辑grub 使用echo直接写入echo 'GRUB_CMDLINE_LINUX=\"quiet console=tty0 console=ttyS0,115200\"' >> /etc/default/grub 或者直接编辑nano /etc/default/grub 新增一行GRUB_CMDLINE_LINUX=\"quiet console=tty0 console=ttyS0,115200” 然后更新grub# debian based update-grub # redhat based grub2-mkconfig --output=/boot/grub2/grub.cfg 最后重启vm","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"linux","slug":"技术/linux","permalink":"/categories/技术/linux/"},{"name":"PVE","slug":"技术/linux/PVE","permalink":"/categories/技术/linux/PVE/"}],"tags":[{"name":"PVE","slug":"PVE","permalink":"/tags/PVE/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"},{"name":"linux","slug":"技术/linux","permalink":"/categories/技术/linux/"},{"name":"PVE","slug":"技术/linux/PVE","permalink":"/categories/技术/linux/PVE/"}]},{"title":"PVE删除用户报错解决方法","slug":"PVE删除用户报错解决方法","date":"2023-02-08T04:26:24.000Z","updated":"2023-02-08T16:34:18.000Z","comments":true,"path":"post/2023/02/08/PVE删除用户报错解决方法/","link":"","permalink":"/post/2023/02/08/PVE删除用户报错解决方法/","excerpt":"","text":"PVE删除用户报错解决办法重启pvestatd服务systemctl restart pvestatd","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"},{"name":"PVE","slug":"linux/技术/PVE","permalink":"/categories/linux/技术/PVE/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"PVE","slug":"PVE","permalink":"/tags/PVE/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"},{"name":"PVE","slug":"linux/技术/PVE","permalink":"/categories/linux/技术/PVE/"}]},{"title":"Vue通过window-resize实现图表自适应","slug":"Vue通过window-resize实现图表自适应","date":"2023-01-16T16:21:45.000Z","updated":"2023-01-16T16:21:45.000Z","comments":true,"path":"post/2023/01/16/Vue通过window-resize实现图表自适应/","link":"","permalink":"/post/2023/01/16/Vue通过window-resize实现图表自适应/","excerpt":"","text":"Vue通过 window.resize() 实现图表自适应在src/components下新建echarts文件夹，目录结构如下 echarts ├─ index.vue └─ mixins └─ resize.js index.vue&lt;template&gt; &lt;div :id=\"echarts\" :style=\"styles\" /&gt; &lt;/template&gt; &lt;script&gt; export default { name: 'Index', props: { styles: { type: Object, default: null, }, optionData: { type: Object, default: null, }, }, data() { return { myChart: null, } }, computed: { echarts() { return 'echarts' + Math.ceil(Math.random() * 100) }, }, watch: { optionData: { handler(newVal, oldVal) { this.handleSetVisitChart() }, deep: true, // 对象内部属性的监听，关键。 }, }, mounted: function () { const vm = this vm.$nextTick(() =&gt; { vm.handleSetVisitChart() window.addEventListener('resize', this.wsFunc) }) }, beforeDestroy() { window.removeEventListener('resize', this.wsFunc) if (!this.myChart) { return } this.myChart.dispose() this.myChart = null }, methods: { wsFunc() { this.myChart.resize() }, handleSetVisitChart() { if (!this.myChart) { this.myChart = this.$echarts.init(document.getElementById(this.echarts)) }else{ // this.myChart.clear() } let option = null option = this.optionData // 基于准备好的dom，初始化echarts实例 this.myChart.setOption(option, true) }, }, } &lt;/script&gt; &lt;style scoped&gt; &lt;/style&gt; resize.jsimport { debounce } from '@/utils' export default { data() { return { $_sidebarElm: null, $_resizeHandler: null } }, mounted() { this.initListener() }, activated() { if (!this.$_resizeHandler) { // avoid duplication init this.initListener() } // when keep-alive chart activated, auto resize this.resize() }, beforeDestroy() { this.destroyListener() }, deactivated() { this.destroyListener() }, methods: { // use $_ for mixins properties // https://vuejs.org/v2/style-guide/index.html#Private-property-names-essential $_sidebarResizeHandler(e) { if (e.propertyName === 'width') { this.$_resizeHandler() } }, initListener() { this.$_resizeHandler = debounce(() =&gt; { this.resize() }, 100) window.addEventListener('resize', this.$_resizeHandler) this.$_sidebarElm = document.getElementsByClassName('sidebar-container')[0] this.$_sidebarElm &amp;&amp; this.$_sidebarElm.addEventListener('transitionend', this.$_sidebarResizeHandler) }, destroyListener() { window.removeEventListener('resize', this.$_resizeHandler) this.$_resizeHandler = null this.$_sidebarElm &amp;&amp; this.$_sidebarElm.removeEventListener('transitionend', this.$_sidebarResizeHandler) }, resize() { const { chart } = this chart &amp;&amp; chart.resize() } } } 使用方法&lt;template&gt; &lt;echarts-from :option-data=\"optionData\" :styles=\"{ height: '100%' }\" /&gt; &lt;/template&gt; &lt;script&gt; import echartsFrom from '@/components/echarts/index' &lt;/script&gt;","categories":[{"name":"前端","slug":"前端","permalink":"/categories/前端/"}],"tags":[{"name":"vue","slug":"vue","permalink":"/tags/vue/"},{"name":"前端","slug":"前端","permalink":"/tags/前端/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"/categories/前端/"}]},{"title":"linux安装nodejs LTS","slug":"linux安装nodejs-LTS","date":"2023-01-16T11:42:44.000Z","updated":"2023-02-09T15:42:10.000Z","comments":true,"path":"post/2023/01/16/linux安装nodejs-LTS/","link":"","permalink":"/post/2023/01/16/linux安装nodejs-LTS/","excerpt":"","text":"Linux安装nodejs LTSCentOScurl -fsSL https://rpm.nodesource.com/setup_lts.x | bash - yum install nodejs Ubuntucurl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - sudo apt install nodejs","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"nodejs","slug":"nodejs","permalink":"/tags/nodejs/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"},{"name":"技术","slug":"linux/技术","permalink":"/categories/linux/技术/"}]},{"title":"Oh my zsh + powerlevel10k","slug":"Oh-my-zsh-powerlevel10k","date":"2023-01-16T11:37:50.000Z","updated":"2023-02-08T15:47:57.000Z","comments":true,"path":"post/2023/01/16/Oh-my-zsh-powerlevel10k/","link":"","permalink":"/post/2023/01/16/Oh-my-zsh-powerlevel10k/","excerpt":"","text":"Oh-my-zsh + powerlevel10k1.先看下自己有哪一些 shell cat /etc/shells 2.如果没有 zsh 需要安装 首先看一下软件源里面的zsh版本 p10k最低要求5.1 sudo apt-get install zsh #Ubuntu Linux 记得先升级下 apt-get sudo yum install zsh #Redhat Linux 3.安装完成后设置zsh 为默认shell chsh -s /bin/zsh #安装完成后设置当前用户使用 zsh 并重启 Oh My Zsh一键安装脚本命令:sh -c \"$(curl -fsSL https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)\" 安装 Oh My Zsh 插件1.安装 zsh-syntax-highlighting（代码高亮） git clone https://gitee.com/mercerry/zsh-syntax-highlighting $ZSH_CUSTOM/plugins/zsh-syntax-highlighting 2.安装 zsh-autosuggestions（自动建议） git clone https://gitee.com/mercerry/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions 3.安装 zsh-completions（自动补全） git clone https://gitee.com/mercerry/zsh-completions $ZSH_CUSTOM/plugins/zsh-completions 4.zsh-com­ple­tions 插件需要将 autoload -U compinit &amp;&amp; compinit 添加到.zshrc，输入命令可一键添加： [ -z \"`grep \"autoload -U compinit && compinit\" ~/.zshrc`\" ] && echo \"autoload -U compinit && compinit\" >> ~/.zshrc 5.把需要启用的插件写入到配置文件中，使用 sed 命令一键操作： sed -i '/^plugins=/c\\plugins=(git sudo z zsh-syntax-highlighting zsh-autosuggestions zsh-completions)' ~/.zshrc 6.最后应用配置 source ~/.zshrc 安装p10k主题git clone https://gitee.com/mercerry/powerlevel10k $ZSH_CUSTOM/themes/powerlevel10k 修改 Oh My Zsh 主题sed -i '/^ZSH_THEME=/c\\ZSH_THEME=\"powerlevel10k/powerlevel10k\"' ~/.zshrc source ~/.zshrc xshell中没有透明颜色的问题 nano ~/.zshrc #文件末尾添加如下内容 TERM=xterm-256color zle_highlight+=(paste:none) ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=\"fg=241,bold,underline\"","categories":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"/categories/linux/"}]},{"title":"Vue大屏自适应","slug":"Vue通过v-scal-screen实现大屏自适应","date":"2023-01-13T05:11:39.000Z","updated":"2023-02-08T15:45:49.000Z","comments":true,"path":"post/2023/01/13/Vue通过v-scal-screen实现大屏自适应/","link":"","permalink":"/post/2023/01/13/Vue通过v-scal-screen实现大屏自适应/","excerpt":"","text":"Vue通过v-scal-screen实现大屏自适应使用v-scal-screen vue2npm i v-scal-screen@1.0.2 --save main.js import VScaleScreen from 'v-scale-screen' ... Vue.use(VScaleScreen) vue3npm i v-scal-screen@2.0.0 --save &lt;v-scale-screen width=\"1920\"height=\"1080\"&gt; &lt;div&gt; &lt;v-chart&gt;....&lt;/v-chart&gt; &lt;v-chart&gt;....&lt;/v-chart&gt; &lt;v-chart&gt;....&lt;/v-chart&gt; &lt;v-chart&gt;....&lt;/v-chart&gt; &lt;v-chart&gt;....&lt;/v-chart&gt; &lt;/div&gt; &lt;/v-scale-screen&gt; &lt;script&gt; Import VScaleScreenfrom 'v-scale-screen' exportdefault{ components:{ VScaleScreen } } &lt;/script&gt;","categories":[{"name":"前端","slug":"前端","permalink":"/categories/前端/"}],"tags":[{"name":"vue","slug":"vue","permalink":"/tags/vue/"},{"name":"前端","slug":"前端","permalink":"/tags/前端/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"/categories/前端/"}]}]}